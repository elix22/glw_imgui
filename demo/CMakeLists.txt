CMAKE_MINIMUM_REQUIRED(VERSION 2.7)
PROJECT(demo)

SET( GLEW_PATH thirdparty/glew)
SET(BUILD_UTILS OFF CACHE BOOL "build glew utils")

SET(INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/install)
SET(ASSETS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/assets)
SET(CMAKE_INSTALL_PREFIX ${INSTALL_DIR})

INCLUDE_DIRECTORIES(${GLEW_PATH}/include)
ADD_SUBDIRECTORY(${GLEW_PATH}/build/cmake)

INCLUDE_DIRECTORIES(thirdparty)
INCLUDE_DIRECTORIES(./../include)
INCLUDE_DIRECTORIES(./../thirdparty)

IF(WIN32)
   	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

IF (APPLE)
	FIND_LIBRARY(OpenGL_LIBRARY OpenGL)
ELSEIF(UNIX)
	SET(OpenGL_LIBRARY GL)
ELSE()
	# let's try to build SDL from source
	SET(SDL2_PATH thirdparty/SDL2)
	SET(SDL_STATIC ON CACHE BOOL "build sdl static library")
	SET(SDL_SHARED OFF CACHE BOOL "build sdl shared library")
	ADD_SUBDIRECTORY(${SDL2_PATH})
	SET(SDL2_LIBRARIES SDL2-static SDL2main)
	SET(OpenGL_LIBRARY opengl32)
	INCLUDE_DIRECTORIES(${SDL2_PATH}/include)
ENDIF()

IF (APPLE OR UNIX)
	FIND_PACKAGE(SDL2 REQUIRED)
	INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS})
	STRING(STRIP "${SDL2_LIBRARIES}" SDL2_LIBRARIES)
ENDIF()

ADD_EXECUTABLE (${PROJECT_NAME} main.cpp platform_sdl.cpp platform_sdl.h)
TARGET_LINK_LIBRARIES( ${PROJECT_NAME}  glew_s ${SDL2_LIBRARIES} ${OpenGL_LIBRARY} glw_imgui)

INSTALL (TARGETS ${PROJECT_NAME} DESTINATION ${INSTALL_DIR})
INSTALL (FILES  ${ASSETS_DIR}/DroidSans.ttf DESTINATION ${INSTALL_DIR})
